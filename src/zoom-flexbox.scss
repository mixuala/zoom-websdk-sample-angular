// unset react/zoom CSS
body.undo-zoom-react.undo-zoom-react {
  min-height: unset;
  min-width: unset;
}



.flex-wrap.zoom {
  display: flex;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: center;
  height: 100%;
  #zoom-container {
    position: relative;
    display: none;
    &.hydrated {
      display: block;
    }
  }
  &.landscape {
    flex-direction: row;
    width: 100vw;
    height: 100%;
    #zoom-container {
      height: 100%;
      flex: 3;
    }
    #app-container {
      min-width: 375px;
      flex: 2;
    }
  }
  &.portrait {
    flex-direction: column;
    height: 100%;
    width: 100%;  // check
    justify-content: center;
    #zoom-container {
      padding: 5px 0 0;
      width: 100%;
      flex: 1;
      min-height: 216px;
    }
    #app-container {
      flex-grow: 3;
    }
  }
}

.flex-wrap.zoom .ReactModalPortal {
  // does NOT work here, must be in variables.scss
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  .ReactModal__Overlay {
    position: relative;
    height: 100%;
  }
}

@media (max-width: 767px) {
  // portrait
  .flex-wrap.zoom {
    flex-direction: column;
    height: 100%;
    width: 100%;  // check
    justify-content: center;
    #zoom-container {
      margin: 5px 0;
      width: 100%;
      flex: 1;
      min-height: 221px;
    }
    #app-container {
      flex-grow: 3;
      > ion-grid:first-child {
        padding-top: 0;
        ion-col:first-child {
          padding-top: 0;
        }
      }
    }
  }
}

@media (min-width: 768px) {
  // landscape
  .flex-wrap.zoom {
    flex-direction: row;
    width: 100vw;
    height: 100%;
    #zoom-container {
      height: 100%;
      flex: 3;
    }
    #app-container {
      min-width: 375px;
      flex: 2;
    }
  }
}

