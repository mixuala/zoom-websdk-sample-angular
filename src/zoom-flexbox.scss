:root {
  // CSS4
  // portrait: zoom on top, app grows, zoom fixed
  --zoom-min-height-portrait: 211px;    
  --app-flex-grow-portrait: 3;

  // landscape: zoom on left, zoom grows, app fixed
  --app-min-width-landscape: 375px;     
  --zoom-flex-grow-landscape: 1.5;
}


// unset react/zoom CSS
body.undo-zoom-react.undo-zoom-react {
  min-height: unset;
  min-width: unset;
}

@mixin flex-portrait {
  .flex-wrap.zoom {
    flex-direction: column;
    justify-content: center;
    #zoom-container {
      // padding: 5px 0 0;  // pushes zmmtg down 5px
      flex: 1;
      min-height: var(--zoom-min-height-portrait);
    }
    #app-container {
      flex-grow: 3;
    }
  }
}

@mixin flex-landscape {
  .flex-wrap.zoom {
    flex-direction: row;
    align-items: start;
    #zoom-container {
      height: 100%;
      // flex-grow: 1.5;
      flex-grow: var(--zoom-flex-grow-landscape);
    }
    #app-container {
      height: 100%;
      min-width: var(--app-min-width-landscape);
      flex: 1;
    }
  }
}

.flex-wrap.zoom {
  display: flex;
  flex-wrap: nowrap;
  // align-items: center;
  // justify-content: center;
  height: 100%;
  #zoom-container {
    position: relative;
    display: none;
    &.hydrated {
      display: block;
    }
  }
  &.landscape {
    @include flex-landscape;
  }
  &.portrait {
    @include flex-portrait;
  }
}

.flex-wrap.zoom .ReactModalPortal {
  // does NOT work here, must be in variables.scss
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  .ReactModal__Overlay {
    position: relative;
    height: 100%;
  }
}

@media (max-width: 767px) {
  @include flex-portrait;
}

@media (min-width: 768px) {
  @include flex-landscape;
}


.flex-wrap.dev {
  #zoom-container.hydrated {
    background-color: darkcyan;
  }
  #app-container {
    background-color: lightcoral;
  }
}